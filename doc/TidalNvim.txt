*TidalNvim.txt*    For nvim version 0.3.1 or later.

        Tidal integration for Neovim

TidalNvim                                      *TidalNvim*

1. Description..............................|tidalnvim-description|
   1.1 Acknowledgments
2. Installation.............................|tidalnvim-installation|
   2.1 Requirements
   2.2 Installation
3. Mappings.................................|tidalnvim-mappings|
   3.1 Remapping
4. Commands.................................|tidalnvim-commands|
5. Help system..............................|tidalnvim-help-system|
6. Configuration............................|tidalnvim-configuration|
8. Thanks...................................|tidalnvim-thanks|
7. License..................................|tidalnvim-license|

==============================================================================
DESCRIPTION                                                 *tidalnvim-description*

TidalNvim is a Tidal editor frontend for Neovim. It provides ways to
evaluate code and inspect output from the post window. The goal of this plugin
is to create an integrated development environment for Tidal in Neovim.

Acknowledgments~

This plugin borrows heavily from the excellent scnvim plugin by David Granström et. al.,
as well as the vim-tidal plugin by Damián Silvani et. al. These projects
can be found at https://github.com/davidgranstrom/scnvim and
https://github.com/tidalcycles/vim-tidal, respectively.

They have both given inspiration on how to proceed with an nvim project, as
well as provide the necesssary code to get it working. Many thanks.

==============================================================================
INSTALLATION                                               *tidalnvim-installation*

Requirements~

Neovim (>= 0.4.3)
Tidal

Installation~

Here is an example using vim-plug

Install the vim plugin~

Do this using your favorite plugin manager. I prefer Tim Pope's [pathogen][pathogen].

Start TidalNvim~

Open a new file in `nvim` with a `.tidal` extension and type `:TidalNvimStart` to start Tidal.

==============================================================================
MAPPINGS                                                       *tidalnvim-mappings*

<C-e>                   Send current block or line.
                        (depending on context).
                        Mode: Insert, Normal
                        Name: `<Plug>(tidalnvim-send-block)`

<C-e>                   Send current selection.
                        Mode: Visual
                        Name: `<Plug>(tidalnvim-send-selection)`

<M-e>                   Send current line.
                        Mode: Insert, Normal
                        Name: `<Plug>(tidalnvim-send-line)`

<CR>                    Toggle post window buffer
                        Mode: Insert, Normal
                        Name: `<Plug>(tidalnvim-postwindow-toggle)`

<M-L>                   Clear post window buffer
                        Mode:  Insert, Normal
                        Name: `<Plug>(tidalnvim-postwindow-clear)`

Remapping~

To remap any of the default mappings use the `nmap` command together with the name of the mapping.
>
  nmap <F5> <Plug>(tidalnvim-send-block)

==============================================================================
COMMANDS                                                       *tidalnvim-commands*

Command                        Description
-------                        -----------
`TidalNvimStart`                    Start Tidal
`TidalNvimStop`                     Stop Tidal

==============================================================================
CONFIGURATION                                             *tidalnvim-configuration*

The following variables are used to configure tidalnvim. This plugin should work
out-of-the-box so it is not necessary to set them if you are happy with the
defaults.

Run `:checkhealth` to diagnose common problems with your config.

Post window~

Vertical "v" or horizontal "h" split.
>
  let g:tidalnvim_postwin_orientation = 'v'

Position of the post window "right" or "left".
>
  let g:tidalnvim_postwin_direction = 'right'

Set the size of the post window.
Default is half the terminal size for vertical and a third for horizontal.
>
  let g:tidalnvim_postwin_size = 25

Automatically open post window on a Tidal error
>
  let g:tidalnvim_postwin_auto_toggle = 1

Eval flash~

Duration of the highlight in milliseconds. A value of 0 disables eval flash.
>
  let g:tidalnvim_eval_flash_duration = 100

Number of flashes. A value of 0 disables eval flash.
>
  let g:tidalnvim_eval_flash_repeats = 2

Configure the color
>
  highlight TidalNvimEval guifg=black guibg=white ctermfg=black ctermbg=white

Extras~

Set this variable if you don't want any default mappings
>
  let g:tidalnvim_no_mappings = 1

==============================================================================
THANKS 								*tidalnvim-thanks*

Gigantic thanks to these plugins for being shoulders to stand on

[scnvim](https://github.com/supercollider/scvim)

[vim-tidal](https://github.com/tidalcycles/vim-tidal)

==============================================================================
LICENSE                                                         *tidalnvim-license*

tidalnvim - Tidal integration for Neovim
Copyright © 2020 John Murphy

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.


 vim:tw=78:et:ft=help:norl:
